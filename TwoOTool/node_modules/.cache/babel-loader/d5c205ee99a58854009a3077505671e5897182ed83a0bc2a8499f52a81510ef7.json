{"ast":null,"code":"import TeamService from '../services/TeamService';\nimport axios from 'axios';\nexport default {\n  props: ['initialContent'],\n  data() {\n    return {\n      dialog: false,\n      dateMenu: false,\n      title: '',\n      info: '',\n      items: [],\n      inputRules: [v => v.length > 0 || 'Please provide the input'],\n      employee: {\n        id: this.initialContent.id,\n        avatar: this.initialContent.avatar,\n        email: this.initialContent.email,\n        name: this.initialContent.name,\n        password: this.initialContent.password,\n        team: this.initialContent.team,\n        title: this.initialContent.title,\n        userName: this.initialContent.userName,\n        role: this.initialContent.role\n      }\n    };\n  },\n  methods: {\n    validate() {\n      if (this.$refs.form.validate()) {\n        this.$emit('editMember', this.employee);\n        this.dialog = false;\n      }\n      try {\n        const response = axios.post('http://localhost:8080/employees', this.employee);\n        console.log('Response:', response.data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n      this.dialog = false, this.dateMenu = false, this.$emit('editMember', this.employee);\n    },\n    closePopup() {\n      if (this.$refs.form.validate()) {\n        this.dialog = false;\n      }\n    },\n    getEmployees() {\n      TeamService.getEmployees().then(response => {\n        this.items = response.data;\n      });\n    }\n  },\n  created() {\n    this.getEmployees();\n  }\n};","map":{"version":3,"names":["TeamService","axios","props","data","dialog","dateMenu","title","info","items","inputRules","v","length","employee","id","initialContent","avatar","email","name","password","team","userName","role","methods","validate","$refs","form","$emit","response","post","console","log","error","closePopup","getEmployees","then","created"],"sources":["src/components/EmployeeEditPopup.vue"],"sourcesContent":["<template>\r\n    <v-dialog max-width=\"600px\" v-model=\"dialog\">\r\n        <template v-slot:activator=\"{ on, attrs }\">\r\n            <v-btn v-bind=\"attrs\" v-on=\"on\">Edit Member</v-btn>\r\n        </template>\r\n        <v-form ref=\"form\">\r\n            <v-card>\r\n                <v-card-title>Edit Member</v-card-title>\r\n                <v-divider></v-divider>\r\n                <v-card-text class=\"pt-5 pb-0\">\r\n                    <v-text-field label=\"Name\" v-model=\"employee.name\" outlined color=\"indigo\"></v-text-field>\r\n                    <v-text-field label=\"Title\" v-model=\"employee.title\" outlined color=\"indigo\"></v-text-field>\r\n                    <v-text-field label=\"Team\" v-model=\"employee.team\" outlined color=\"indigo\"></v-text-field>\r\n                    <v-text-field label=\"Email\" v-model=\"employee.email\" outlined color=\"indigo\"></v-text-field>\r\n                    <div id=\"app\">\r\n    <AvatarComboBox v-model=\"employee.avatar\" @avatarSelected=\"setEmployeeAvatar\" />\r\n  </div>\r\n                    <v-text-field label=\"Username\" v-model=\"employee.userName\" outlined color=\"indigo\"></v-text-field>\r\n                    <v-text-field label=\"Password\" v-model=\"employee.password\" outlined color=\"indigo\"></v-text-field>\r\n                    <v-text-field label=\"Role\" v-model=\"employee.role\" outlined color=\"indigo\"></v-text-field>\r\n                </v-card-text>\r\n                <v-divider></v-divider>\r\n                <v-card-action class=\"d-flex justify-end pa-3\">\r\n                    <v-btn class=\"indigo white--text\" @click=\"validate\">Edit Member</v-btn>\r\n                    <v-btn class=\"indigo white--text\" @click=\"closePopup\">Cancel</v-btn>\r\n                </v-card-action>\r\n            </v-card>\r\n        </v-form>\r\n    </v-dialog>\r\n</template>\r\n<script>\r\n\r\nimport TeamService from '../services/TeamService';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    props: ['initialContent'],\r\n    data() {\r\n        return {\r\n            dialog: false,\r\n            dateMenu: false,\r\n            title: '',\r\n            info: '',\r\n        items: [],\r\n            inputRules: [\r\n                v => v.length > 0 || 'Please provide the input'\r\n            ],\r\n\r\n            employee: {\r\n                id: this.initialContent.id,\r\n                avatar: this.initialContent.avatar,\r\n                email: this.initialContent.email,\r\n                name: this.initialContent.name,\r\n                password:this.initialContent.password,\r\n                team:this.initialContent.team,\r\n                title:this.initialContent.title,\r\n                userName:this.initialContent.userName,\r\n                role:this.initialContent.role\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        validate() {\r\n            if (this.$refs.form.validate()) {\r\n                this.$emit('editMember', this.employee);\r\n                this.dialog = false;\r\n            }\r\n            try {\r\n                const response = axios.post('http://localhost:8080/employees', this.employee);\r\n                console.log('Response:', response.data);\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n            this.dialog = false,\r\n            this.dateMenu= false,\r\n            this.$emit('editMember', this.employee);\r\n        }, \r\n        closePopup() {\r\n            if (this.$refs.form.validate()) {\r\n                this.dialog = false;\r\n            }\r\n        },\r\n        getEmployees(){\r\n                TeamService.getEmployees().then((response)=>{\r\n                    this.items=response.data;\r\n                });\r\n            }\r\n    },\r\n        created() {\r\n            this.getEmployees();\r\n        }\r\n}\r\n</script>\r\n"],"mappings":"AAgCA,OAAAA,WAAA;AACA,OAAAC,KAAA;AAEA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,QAAA;MACAC,KAAA;MACAC,IAAA;MACAC,KAAA;MACAC,UAAA,GACAC,CAAA,IAAAA,CAAA,CAAAC,MAAA,mCACA;MAEAC,QAAA;QACAC,EAAA,OAAAC,cAAA,CAAAD,EAAA;QACAE,MAAA,OAAAD,cAAA,CAAAC,MAAA;QACAC,KAAA,OAAAF,cAAA,CAAAE,KAAA;QACAC,IAAA,OAAAH,cAAA,CAAAG,IAAA;QACAC,QAAA,OAAAJ,cAAA,CAAAI,QAAA;QACAC,IAAA,OAAAL,cAAA,CAAAK,IAAA;QACAb,KAAA,OAAAQ,cAAA,CAAAR,KAAA;QACAc,QAAA,OAAAN,cAAA,CAAAM,QAAA;QACAC,IAAA,OAAAP,cAAA,CAAAO;MACA;IACA;EACA;EACAC,OAAA;IACAC,SAAA;MACA,SAAAC,KAAA,CAAAC,IAAA,CAAAF,QAAA;QACA,KAAAG,KAAA,oBAAAd,QAAA;QACA,KAAAR,MAAA;MACA;MACA;QACA,MAAAuB,QAAA,GAAA1B,KAAA,CAAA2B,IAAA,yCAAAhB,QAAA;QACAiB,OAAA,CAAAC,GAAA,cAAAH,QAAA,CAAAxB,IAAA;MACA,SAAA4B,KAAA;QACAF,OAAA,CAAAE,KAAA,WAAAA,KAAA;MACA;MACA,KAAA3B,MAAA,UACA,KAAAC,QAAA,UACA,KAAAqB,KAAA,oBAAAd,QAAA;IACA;IACAoB,WAAA;MACA,SAAAR,KAAA,CAAAC,IAAA,CAAAF,QAAA;QACA,KAAAnB,MAAA;MACA;IACA;IACA6B,aAAA;MACAjC,WAAA,CAAAiC,YAAA,GAAAC,IAAA,CAAAP,QAAA;QACA,KAAAnB,KAAA,GAAAmB,QAAA,CAAAxB,IAAA;MACA;IACA;EACA;EACAgC,QAAA;IACA,KAAAF,YAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}