{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapMutations } from 'vuex';\nimport store from '../js/store';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    ...mapMutations(['setLoggedIn']),\n    async login() {\n      const employee = {\n        userName: this.username,\n        password: this.password\n      };\n      try {\n        const response = await axios.get('http://localhost:8080/validateUser', {\n          params: employee\n        });\n        if (response.data !== '') {\n          store.commit('setUsername', this.username);\n          store.commit('setLoggedIn', true);\n          this.$router.push('/DashBoard');\n        } else {\n          this.errorMessage = 'Invalid username or password';\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapMutations","store","axios","data","username","password","errorMessage","methods","login","employee","userName","response","get","params","commit","$router","push","error","console"],"sources":["src/pages/LogIn.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n        <div class=\"d-flex justify-center pt-4 pb-2\">\r\n                        <v-avatar size=\"200\">\r\n                            <img src=\"/login.jpg\">\r\n                        </v-avatar>\r\n                    </div>\r\n      <div class=\"input-container\">\r\n      <label for=\"username\">Username:</label>\r\n      <input v-model=\"username\" id=\"username\">\r\n    </div>\r\n    <div class=\"input-container\">\r\n        <label for=\"password\">Password:</label>\r\n      <input v-model=\"password\" type=\"password\">\r\n    </div>\r\n      <button @click=\"login\" class=\"login-button\">Login</button>\r\n      <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n    </div>\r\n  </template>\r\n  <script>\r\n\r\nimport { mapMutations } from 'vuex'; \r\nimport store from '../js/store'; \r\nimport axios from 'axios';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        username: '',\r\n        password: '',\r\n        errorMessage: ''\r\n      };\r\n    },\r\n        methods: {\r\n        ...mapMutations(['setLoggedIn']),\r\n        async  login() {\r\n        const employee = {\r\n        userName: this.username,\r\n        password: this.password\r\n      };\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/validateUser', {\r\n          params: employee\r\n        });\r\n\r\n        if (response.data !== '') {\r\n            store.commit('setUsername', this.username); \r\n            store.commit('setLoggedIn', true); \r\n   \r\n            this.$router.push('/DashBoard');\r\n        } else {\r\n            this.errorMessage = 'Invalid username or password';\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      }\r\n    }  \r\n  };\r\n  </script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 150px auto; \r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\nh1 {\r\n  color: #333;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n}\r\n\r\n.login-button {\r\n  background-color:rgb(26, 154, 234);\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n}\r\n\r\n.error-message {\r\n  color: #ff0000;\r\n  margin-top: 10px;\r\n}\r\n.input-container {\r\n  display: flex;\r\n  align-items: center; /* İçerikleri dikeyde hizalar */\r\n  margin-bottom: 10px; /* İhtiyaca göre alt boşluk ekleme */\r\n}\r\n\r\n.input-container label {\r\n  margin-right: 10px; /* Label ile input arasına boşluk bırakma */\r\n}\r\n</style>"],"mappings":";AAqBA,SAAAA,YAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACA,GAAAP,YAAA;IACA,MAAAQ,MAAA;MACA,MAAAC,QAAA;QACAC,QAAA,OAAAN,QAAA;QACAC,QAAA,OAAAA;MACA;MACA;QACA,MAAAM,QAAA,SAAAT,KAAA,CAAAU,GAAA;UACAC,MAAA,EAAAJ;QACA;QAEA,IAAAE,QAAA,CAAAR,IAAA;UACAF,KAAA,CAAAa,MAAA,qBAAAV,QAAA;UACAH,KAAA,CAAAa,MAAA;UAEA,KAAAC,OAAA,CAAAC,IAAA;QACA;UACA,KAAAV,YAAA;QACA;MACA,SAAAW,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}