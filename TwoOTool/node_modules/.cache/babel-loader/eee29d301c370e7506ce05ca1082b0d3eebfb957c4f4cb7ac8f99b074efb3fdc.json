{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapMutations } from 'vuex';\nimport store from '../js/store';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    ...mapMutations(['setLoggedIn']),\n    async login() {\n      const employee = {\n        userName: this.username,\n        password: this.password\n      };\n      try {\n        const response = await axios.get('http://localhost:8080/validateUser', {\n          params: employee\n        });\n        if (response.data !== '') {\n          const responseData = response.data;\n          store.commit('setUsername', this.username);\n          store.commit('setLoggedIn', true);\n          store.commit('setAvatar', responseData.avatar);\n          this.$router.push('/DashBoard');\n        } else {\n          this.errorMessage = 'Invalid username or password';\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapMutations","store","axios","data","username","password","errorMessage","methods","login","employee","userName","response","get","params","responseData","commit","avatar","$router","push","error","console"],"sources":["src/pages/LogIn.vue"],"sourcesContent":["<template>\r\n<body>\r\n\r\n<div class=\"container\">\r\n      <div class=\"content\">\r\n\r\n        <div class=\"login-container animated fadeInDown\" style=\"animation-delay:.3s;\">\r\n         <!--   Login   --> \r\n            <div class=\"login justify-content-center\" id=\"login-form\">\r\n              <h1 class=\"form-title\"><i class=\"fas fa-user\" style=\"color:#55a0ff;\"></i> <br> LOGIN  <hr></h1>\r\n       \r\n               <div class=\"form-container animated fadeIn\" style=\"animation-delay:.7s;\">\r\n                <form method=\"POST\" action=\"{{ route('login') }}\">\r\n                   \r\n                    <label for=\"\"><i class=\"fas fa-at\"></i> Email </label>\r\n                    <input type=\"email\" name=\"email\" placeholder=\"E-mail\">\r\n                    \r\n                    <label for=\"\"><i class=\"fab fa-slack-hash\"></i> Password </label>\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\">\r\n                    \r\n                    <div class=\"submit-buttons\">\r\n                        <input type=\"submit\" value=\"Connect\">\r\n                        <input type=\"button\" value=\"Sign Up\" class=\"btn-register\">\r\n                    </div>\r\n                    \r\n                </form>\r\n              </div>\r\n            </div>\r\n            <!--   Login   --> \r\n            \r\n            <!--    Register    -->\r\n             \r\n            <div class=\"register justify-content-cente animatedr\"  style=\"animation-delay:.3s\">\r\n              <h1 class=\"form-title \"><i class=\"fas fa-user-plus\" style=\"color:#57efc4;\"></i> <br> REGISTER <hr></h1>\r\n       \r\n               <div class=\"form-container animated fadeIn\" style=\"animation-delay:.7s;\">\r\n                <form method=\"POST\" action=\"{{ route('register') }}\">\r\n                   \r\n                    \r\n                    <label for=\"\"><i class=\"fab fa-amilia\"></i> Name </label>\r\n                     <input  type=\"text\" name=\"name\" placeholder=\"Name\" required autofocus>\r\n                    \r\n                    <label for=\"\"><i class=\"fas fa-at\"></i> Email </label>\r\n                    <input type=\"email\" name=\"email\" placeholder=\"E-mail\">\r\n                    \r\n                    <label for=\"\"><i class=\"fab fa-slack-hash\"></i> Password </label>\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\">\r\n                    \r\n                    <label for=\"\"><i class=\"fab fa-slack-hash\"></i> Confirm Password </label>\r\n                    <input type=\"password\" name=\"password_confirmation\"  placeholder=\"Password\">\r\n                    \r\n                    <div class=\"submit-buttons\">\r\n                        <input type=\"submit\" value=\"Register\" style=\"background:#55efc4;\">\r\n                        <input type=\"button\" value=\"Sign In\"  class=\"btn-login\">\r\n                    </div>\r\n                    \r\n                </form>\r\n              </div>\r\n            </div>\r\n            \r\n            <!--    Register    -->\r\n            \r\n            <div class=\"login animated fadeIn\" style=\"animation-delay:.7s;animation-duration:4s;\" id=\"login-bg\"></div>\r\n            \r\n        </div>\r\n        \r\n      </div> \r\n    </div>\r\n</body>\r\n  </template>\r\n  <script>\r\n\r\nimport { mapMutations } from 'vuex'; \r\nimport store from '../js/store'; \r\nimport axios from 'axios';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        username: '',\r\n        password: '',\r\n        errorMessage: ''\r\n      };\r\n    },\r\n        methods: {\r\n        ...mapMutations(['setLoggedIn']),\r\n        async  login() {\r\n        const employee = {\r\n        userName: this.username,\r\n        password: this.password\r\n      };\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/validateUser', {\r\n          params: employee\r\n        });\r\n\r\n        if (response.data !== '') {\r\n            const responseData =response.data\r\n            store.commit('setUsername', this.username); \r\n            store.commit('setLoggedIn', true); \r\n            store.commit('setAvatar', responseData.avatar); \r\n            this.$router.push('/DashBoard');\r\n        } else {\r\n            this.errorMessage = 'Invalid username or password';\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n      }\r\n    }  \r\n  };\r\n  </script>\r\n  <style>\r\n  .login-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 100px;\r\n  }\r\n  \r\n  .error-message {\r\n    color: red;\r\n  }\r\n  </style>"],"mappings":";AAwEA,SAAAA,YAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACA,GAAAP,YAAA;IACA,MAAAQ,MAAA;MACA,MAAAC,QAAA;QACAC,QAAA,OAAAN,QAAA;QACAC,QAAA,OAAAA;MACA;MACA;QACA,MAAAM,QAAA,SAAAT,KAAA,CAAAU,GAAA;UACAC,MAAA,EAAAJ;QACA;QAEA,IAAAE,QAAA,CAAAR,IAAA;UACA,MAAAW,YAAA,GAAAH,QAAA,CAAAR,IAAA;UACAF,KAAA,CAAAc,MAAA,qBAAAX,QAAA;UACAH,KAAA,CAAAc,MAAA;UACAd,KAAA,CAAAc,MAAA,cAAAD,YAAA,CAAAE,MAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;QACA;UACA,KAAAZ,YAAA;QACA;MACA,SAAAa,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}