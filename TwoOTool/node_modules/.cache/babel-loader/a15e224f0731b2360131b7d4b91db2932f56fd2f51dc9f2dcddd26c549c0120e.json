{"ast":null,"code":"import TeamService from '../services/TeamService';\nimport EmployeeEditPopup from '../components/EmployeeEditPopup.vue';\nimport EmployeePopUp from '../components/EmployeePopUp.vue';\nimport store from '../js/store';\nexport default {\n  emits: ['editMember'],\n  components: {\n    EmployeeEditPopup,\n    EmployeePopUp\n  },\n  name: 'EmployeeList',\n  data() {\n    return {\n      employees: []\n    };\n  },\n  watch: {\n    employees: {\n      deep: true,\n      handler() {\n        this.getEmployees();\n      }\n    }\n  },\n  computed: {\n    isAdmin() {\n      return store.state.role === 'admin';\n    }\n  },\n  methods: {\n    getEmployees() {\n      TeamService.getEmployees().then(response => {\n        this.employees = response.data;\n      });\n    }\n  },\n  created() {\n    this.getEmployees();\n  }\n};","map":{"version":3,"names":["TeamService","EmployeeEditPopup","EmployeePopUp","store","emits","components","name","data","employees","watch","deep","handler","getEmployees","computed","isAdmin","state","role","methods","then","response","created"],"sources":["src/pages/TheTeam.vue"],"sourcesContent":["<template >\n    <div>\n        <h1 class=\"grey--text mb-3\">Team Members</h1>\n        <v-layout row wrap>\n            <v-flex xs12 sm6 md4 lg3 v-for=\"person in employees\" :key=\"person.id\"  @mouseover=\"hoveredIndex = person.id\" @mouseleave=\"hoveredIndex = null\">\n                <v-card class=\"ma-4\">\n        <v-tooltip bottom color=\"black\" text-color=\"blue\" border-radius=\"8px\" elevation=\"10\">\n        <template v-slot:activator=\"{ on }\">\n          <div @mouseover=\"hoveredIndex = index\" @mouseleave=\"hoveredIndex = null\" v-on=\"on\">\n            <div class=\"d-flex justify-center pt-4 pb-2\">\n              <v-avatar size=\"100\">\n                <img :src=\"person.avatar\">\n              </v-avatar>\n            </div>\n            <div class=\"d-flex justify-center\">\n              <v-card-title class=\"pa-0\">{{ person.name }}</v-card-title>\n            </div>\n            <v-card-subtitle class=\"text-center pa-0\">{{ person.title }}</v-card-subtitle>\n          </div>\n          <div class=\"d-flex justify-end mb-2\"  v-if=\"isAdmin\">\n                        <div class=\"mr-4\"> \n                             <employee-edit-popup :initialContent=\"person\" @editMember=\"editMember\"></employee-edit-popup>\n                        </div>\n                    </div>\n        </template>\n        <span>{{ person.name }} - {{ person.title }}</span><br>\n        <span>{{ person.email }} - {{ person.email }}</span>\n      </v-tooltip>\n                </v-card>\n            </v-flex>\n        </v-layout>\n        <div class=\"employee-popup-container\" v-if=\"isAdmin\">\n                        <div class=\"mr-4\"> \n                             <employee-pop-up @editMember=\"editMember\"></employee-pop-up>\n                        </div>\n                    </div>\n    </div>\n</template>\n\n<script>\nimport TeamService from '../services/TeamService';\nimport EmployeeEditPopup from '../components/EmployeeEditPopup.vue';\nimport EmployeePopUp from '../components/EmployeePopUp.vue';\nimport store from '../js/store'; \n\n    export default{\n        emits: ['editMember'],\n        components: {\n        EmployeeEditPopup,\n        EmployeePopUp\n    },\n        name: 'EmployeeList',\n        data(){\n            return{\n                employees : []\n            }\n        },   \n        watch: {\n            employees: {\n      deep: true,\n      handler() {\n        this.getEmployees();\n      }\n    }\n  },    \n  computed: {\n    isAdmin() {\n      return store.state.role==='admin';\n    }},\n        methods: {\n            getEmployees(){\n                TeamService.getEmployees().then((response)=>{\n                    this.employees=response.data;\n                });\n            }\n        },\n        created() {\n            this.getEmployees();\n        }\n    }\n</script>\n<style>\n.employee-popup-container {\n  position: fixed;\n  bottom: 20px; /* İstediğiniz boşluğu ayarlayın */\n  right: 20px; /* İstediğiniz boşluğu ayarlayın */\n}\n</style>"],"mappings":"AAwCA,OAAAA,WAAA;AACA,OAAAC,iBAAA;AACA,OAAAC,aAAA;AACA,OAAAC,KAAA;AAEA;EACAC,KAAA;EACAC,UAAA;IACAJ,iBAAA;IACAC;EACA;EACAI,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;IACA;EACA;EACAC,KAAA;IACAD,SAAA;MACAE,IAAA;MACAC,QAAA;QACA,KAAAC,YAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,QAAA;MACA,OAAAX,KAAA,CAAAY,KAAA,CAAAC,IAAA;IACA;EAAA;EACAC,OAAA;IACAL,aAAA;MACAZ,WAAA,CAAAY,YAAA,GAAAM,IAAA,CAAAC,QAAA;QACA,KAAAX,SAAA,GAAAW,QAAA,CAAAZ,IAAA;MACA;IACA;EACA;EACAa,QAAA;IACA,KAAAR,YAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}